CREATE TABLE Ingredients (
    id				INT 		PRIMARY KEY IDENTITY,
    [name]			NVARCHAR(255)		NOT NULL,
    unit			NVARCHAR(50),
    price			MONEY,
    total_quantity	INT,
    category		NVARCHAR(100),
	[description]	TEXT,
    [status]		BIT,
	imageurl		Nvarchar(255)
);


CREATE TABLE Dishes (
    id				INT  PRIMARY KEY IDENTITY,
    [name]			NVARCHAR(255),
    price			MONEY,
    [status]		BIT,
    [description]	TEXT,
	imageurl		Nvarchar(255)
);



CREATE TABLE Dish_Recipe (
    id			INT	PRIMARY KEY IDENTITY,
    dish_id		INT	NOT NULL,
    [status]	BIT,
    FOREIGN KEY (dish_id) REFERENCES Dishes(id)
);

CREATE TABLE Recipe_Ingredients (
    recipe_id					INT NOT NULL,
    ingredient_id				INT NOT NULL,
    ingredient_quantity			INT,
    PRIMARY KEY (recipe_id, ingredient_id),
    FOREIGN KEY (recipe_id)		REFERENCES Dish_Recipe(id),
    FOREIGN KEY (ingredient_id) REFERENCES Ingredients(id)
);

CREATE TABLE Country (
    id							INT PRIMARY KEY IDENTITY,
    [name]						NVARCHAR(100)
);
CREATE TABLE City (
    id							INT PRIMARY KEY IDENTITY,
    [name]						NVARCHAR(100),
    country_id					INT,
    FOREIGN KEY (country_id)	REFERENCES Country(id)
);

CREATE TABLE Accounts (
    id				INT PRIMARY KEY IDENTITY,
    username		NVARCHAR(255) NOT NULL,
    [password]		NVARCHAR(MAX) NOT NULL,
    full_name		NVARCHAR(255) NOT NULL,
    phone			NVARCHAR(20),
    [address]		NVARCHAR(255),
    city_id			INT,
    district_id		INT,
    country_id		INT,
    [role]			BIT NOT NULL DEFAULT 1, --1 customer,0 admin
    [status]		BIT NOT NULL DEFAULT 1, --1 not banned
    
);

CREATE TABLE Orders (
    id					INT PRIMARY KEY IDENTITY,
    account_id			INT,
    order_date			DATETIME,
    ship_date			DATETIME,
    ship_address		NVARCHAR(255),
    ship_city_id		INT,
    ship_district_id	INT,
    total_price			MONEY,
    customer_notes		TEXT,
    [status]			BIT NOT NULL DEFAULT 1,
	FOREIGN KEY (account_id) REFERENCES Accounts(id) 
);

CREATE TABLE Order_Details (
    order_id				INT NOT NULL,
    dish_id					INT NOT NULL,
    item_type				BIT NOT NULL DEFAULT 1,
    quantity				INT,
	price_per_unit			MONEY,
    PRIMARY KEY (order_id, dish_id),
    FOREIGN KEY (order_id)	REFERENCES Orders(id),
    FOREIGN KEY (dish_id)	REFERENCES Dishes(id)
);
--CREATE TABLE Shopping_Cart (
    --account_id							INT,
    --dish_id								INT,
    --quantity							INT,
    --[status]							BIT DEFAULT 1,
    --created_date						DATETIME,
	--PRIMARY KEY (account_id, dish_id),
    --FOREIGN KEY (account_id)			REFERENCES Accounts(id),
    --FOREIGN KEY (dish_id)				REFERENCES Dishes(id)
--);
CREATE TABLE Menu (
    id								INT PRIMARY KEY IDENTITY,
    [name]							NVARCHAR(255),
    create_account					INT,
    [period]						INT CHECK ([period] IN (1,2,3)),
    day_of_week						INT CHECK (day_of_week IN (2,3,4,5,6,7)),
    dish_id							INT,
	[description]					TEXT,
	[status]						BIT DEFAULT 1	
    FOREIGN KEY (create_account)	REFERENCES Accounts(id),
    FOREIGN KEY (dish_id)			REFERENCES Dishes(id)
);
CREATE TABLE Customer_Plan (
    id							INT PRIMARY KEY,
    account_id					INT,
    [period]					TINYINT CHECK ([period] IN (1,2,3)),
    day_of_week					TINYINT CHECK (day_of_week IN (2,3,4,5,6,7)),
    dish_id						INT,
    ordinal_number				INT,
    FOREIGN KEY (account_id)	REFERENCES Accounts(id),
    FOREIGN KEY (dish_id)		REFERENCES Dishes(id)
);
  
create database FoodMarket
